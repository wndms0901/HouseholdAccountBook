<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.mapper.BudgetMapper">
    <resultMap type="com.app.dto.BudgetListDto" id="budgetListDto">
        <result column="large_category_id" property="largeCategoryId" />
        <result column="large_category_name" property="largeCategoryName" />
        <result column="expenditure_budget_amount" property="expenditureBudgetAmount" />
        <result column="expenditure_budget_date" property="expenditureBudgetDate" />
        <result column="expenditure_amount" property="expenditureAmount" />
        <result column="total" property="total" />
    </resultMap>

    <select id="selectTotalIncome" parameterType="com.app.dto.BudgetRequestDto" resultType="String">
        SELECT IFNULL(SUM(i.income_amount),0)
          FROM income i
         WHERE i.user_email=#{email}
           AND i.income_date between #{thisMonthStartDate} AND #{thisMonthEndDate}
    </select>
    <select id="selectThreeMonthAverageExpenditure" parameterType="com.app.dto.BudgetRequestDto" resultType="String">
        SELECT ROUND((IFNULL(SUM(e.card),0)+IFNULL(SUM(e.cash),0))/3)
          FROM expenditure e
         WHERE e.user_email=#{email}
           AND e.expenditure_date BETWEEN #{threeMonthStartDate} AND #{threeMonthEndDate}
    </select>
    <select id="selectLastMonthExpenditure" parameterType="com.app.dto.BudgetRequestDto" resultType="String">
        SELECT IFNULL(SUM(e.card),0)+IFNULL(SUM(e.cash),0)
          FROM expenditure e
         WHERE e.user_email=#{email}
           AND e.expenditure_date BETWEEN #{lastMonthStartDate} AND #{lastMonthEndDate}
    </select>
    <select id="selectBudgetList" parameterType="com.app.dto.BudgetRequestDto" resultMap="budgetListDto">
        SELECT a.large_category_id
             , a.large_category_name
             , a.expenditure_budget_amount
             , a.expenditure_amount
             , (a.expenditure_budget_amount-a.expenditure_amount) AS total
          FROM (
                SELECT lc.large_category_id
                     , lc.large_category_name
                     , IFNULL(eb.expenditure_budget_amount,0) AS expenditure_budget_amount
                     , IFNULL(e.expenditure_amount,0) AS expenditure_amount
                  FROM (
                        SELECT lc.large_category_id
                             , lc.large_category_name
                          FROM large_category lc
                         WHERE lc.category_type='EXP'
                       ) lc
             LEFT JOIN (
                        SELECT eb.large_category_id
                             , eb.expenditure_budget_amount
                          FROM expenditure_budget eb
                         WHERE user_email=#{email}
                           AND eb.expenditure_budget_date=#{budgetDate}
                       ) eb
                    ON lc.large_category_id = eb.large_category_id
             LEFT JOIN (
                        SELECT e.large_category_id
                             , IFNULL(SUM(e.card),0)+IFNULL(SUM(e.cash),0) AS expenditure_amount
                          FROM expenditure e
                         WHERE user_email=#{email}
                           AND e.expenditure_date BETWEEN #{thisMonthStartDate} AND #{thisMonthEndDate}
                      GROUP BY e.large_category_id
                       ) e
                    ON lc.large_category_id = e.large_category_id
               ) a
      ORDER BY FIELD(a.large_category_id,1), a.large_category_id
    </select>
    <select id="selectMonthBudgetExpenditureList" parameterType="com.app.dto.PeriodDto" resultMap="budgetListDto">
        SELECT a.large_category_id
             , a.large_category_name
             , a.total
          FROM (
                SELECT et.large_category_id
                     , '합계' AS large_category_name
                     , ebt.total - et.total as total
                  FROM (
                        SELECT 0 AS large_category_id
                             , IFNULL(SUM(t.total),0) AS total
                          FROM (
                                SELECT e.large_category_id
                                     , SUM(e.card)+SUM(e.cash) AS total
                                  FROM expenditure e
                                 WHERE e.user_email=#{email}
                                   AND e.expenditure_date BETWEEN #{startDate} AND #{endDate}
                              GROUP BY e.large_category_id
                               ) t
                       ) et
    INNER JOIN (
                SELECT 0 AS large_category_id
                     , IFNULL(SUM(eb.expenditure_budget_amount),0) AS total
                  FROM expenditure_budget eb
                 WHERE eb.user_email=#{email}
                   AND eb.expenditure_budget_date = CONCAT(#{year},#{month})
               ) ebt
            ON et.large_category_id = ebt.large_category_id
     UNION ALL
        SELECT lc.large_category_id
             , lc.large_category_name
             , IFNULL(eb.expenditure_budget_amount,0) - IFNULL(e.total,0) AS total
          FROM (
                SELECT lc.large_category_id
                     , lc.large_category_name
                  FROM large_category lc
                 WHERE lc.category_type = 'EXP'
               ) lc
     LEFT JOIN (
                SELECT e.large_category_id
                     , SUM(e.card)+SUM(e.cash) AS total
                  FROM expenditure e
                 WHERE e.user_email=#{email}
                   AND e.expenditure_date BETWEEN #{startDate} AND #{endDate}
              GROUP BY e.large_category_id
               ) e
            ON lc.large_category_id = e.large_category_id
     LEFT JOIN (
                SELECT eb.large_category_id
                     , eb.expenditure_budget_amount
                  FROM expenditure_budget eb
                 WHERE eb.user_email=#{email}
                   AND eb.expenditure_budget_date = CONCAT(#{year},#{month})
               ) eb
            ON lc.large_category_id = eb.large_category_id
      ORDER BY FIELD(large_category_id,1), large_category_id
               ) a
    </select>
</mapper>