<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.mapper.ReportMapper">
    <resultMap type="com.app.dto.MonthReportDto" id="monthReportDto">
        <result column="total_expenditure" property="totalExpenditure" />
        <result column="total_income" property="totalIncome" />
        <result column="daily_average_last_month" property="dailyAverageLastMonth" />
    </resultMap>
    <resultMap type="com.app.dto.WeeklyExpenditureDto" id="weeklyExpenditureDto">
        <result column="week_list" property="weekList" />
        <result column="weekly_expenditure" property="weeklyExpenditure" />
    </resultMap>
    <resultMap type="com.app.dto.CategoryStatisticsDto" id="categoryStatisticsDto">
        <result column="large_category_id" property="largeCategoryId" />
        <result column="large_category_name" property="largeCategoryName" />
        <result column="category_type" property="categoryType" />
        <result column="total_category" property="totalCategory" />
    </resultMap>
    <resultMap type="com.app.dto.DailyExpenditureDto" id="dailyExpenditureDto">
        <result column="expenditure_year" property="expenditureYear" />
        <result column="expenditure_month" property="expenditureMonth" />
        <result column="expenditure_day" property="expenditureDay" />
        <result column="daily_expenditure" property="dailyExpenditure" />
    </resultMap>
    <resultMap type="com.app.dto.MonthIncomeExpenditureDto" id="monthIncomeExpenditureDto">
        <result column="large_category_id" property="largeCategoryId" />
        <result column="large_category_name" property="largeCategoryName" />
        <result column="total" property="total" />
    </resultMap>

    <select id="selectTotalIncomeExpenditure" parameterType="com.app.dto.ReportRequestDto" resultMap="monthReportDto">
        SELECT e.total_expenditure
             , i.total_income
          FROM (
                SELECT IFNULL(SUM(card)+SUM(cash),0) AS total_expenditure
                     , IFNULL(user_email,#{email}) AS user_email
                  FROM expenditure
                 WHERE user_email=#{email}
                   AND expenditure_date between #{startDate} AND #{endDate}
               ) e
     LEFT JOIN (
                SELECT IFNULL(SUM(income_amount),0) AS total_income
                     , IFNULL(user_email,#{email}) AS user_email
                  FROM income
                 WHERE user_email=#{email}
                   AND income_date between #{startDate} AND #{endDate}
               ) i
            ON e.user_email = i.user_email
    </select>
    <select id="selectDailyAverageLastMonth" parameterType="com.app.dto.ReportRequestDto" resultMap="monthReportDto">
        SELECT FLOOR(e.total_expenditure/e.days) as daily_average_last_month
          FROM (
                SELECT IFNULL(SUM(card)+SUM(cash),0) AS total_expenditure
                     , TO_DAYS(#{lastMonthEndDate})-TO_DAYS(#{lastMonthStartDate})+1 as days
                  FROM expenditure
                 WHERE user_email=#{email}
                   AND expenditure_date between #{lastMonthStartDate} AND #{lastMonthEndDate}
               ) e
    </select>
    <select id="selectWeeklyExpenditureList" parameterType="com.app.dto.ReportRequestDto" resultMap="weeklyExpenditureDto">
        <foreach collection="periodDtoList" index="index" item="item" separator="union all">
            SELECT CONCAT(#{item.month} ,'월 ' ,#{item.week} ,'주 ('
                         ,SUBSTRING(#{item.startDate},5,2) ,'.' ,SUBSTRING(#{item.startDate},7,2) ,'-'
                         ,SUBSTRING(#{item.endDate},5,2) ,'.' ,SUBSTRING(#{item.endDate},7,2) ,')'
                         ) AS week_list
                 , IFNULL(sum(e.card)+sum(e.cash),0) AS weekly_expenditure
              FROM expenditure e
             WHERE e.user_email=#{item.email}
               AND e.expenditure_date between #{item.startDate} AND #{item.endDate}
        </foreach>

<!--        ORDER BY e.expenditure_date-->
    </select>
    <select id="selectTotalCategoryList" parameterType="com.app.dto.ReportRequestDto" resultMap="categoryStatisticsDto">
        SELECT lc.large_category_id
             , lc.large_category_name
             , lc.category_type
             , c.total_category
          FROM large_category lc
    INNER JOIN (
                SELECT SUM(card)+SUM(cash) AS total_category
                     , large_category_id
                  FROM expenditure
                 WHERE user_email=#{email}
                   AND expenditure_date between #{startDate} AND #{endDate}
              GROUP BY large_category_id
             UNION ALL
                SELECT sum(income_amount) AS total_category
                     , large_category_id
                  FROM income
                 WHERE user_email=#{email}
                   AND income_date between #{startDate} AND #{endDate}
              GROUP BY large_category_id
               ) c
            ON lc.large_category_id = c.large_category_id
      ORDER BY FIELD(lc.large_category_id,1), lc.large_category_id
    </select>
    <select id="selectDailyExpenditureList" parameterType="com.app.dto.ReportRequestDto" resultMap="dailyExpenditureDto">
        SELECT (e.card+e.cash) AS daily_expenditure
             , SUBSTRING(expenditure_date,1,4) AS expenditure_year
             , SUBSTRING(expenditure_date,5,2) AS expenditure_month
             , SUBSTRING(expenditure_date,7,2) AS expenditure_day
          FROM expenditure e
         WHERE e.user_email=#{email}
           AND e.expenditure_date between #{startDate} AND #{endDate}
      ORDER BY e.expenditure_date
    </select>

    <select id="selectMonthIncomeExpenditureList" parameterType="com.app.dto.PeriodDto" resultMap="monthIncomeExpenditureDto">
        SELECT a.large_category_id
             , a.large_category_name
             , a.total
          FROM (
                SELECT '' AS large_category_id
                     , '수입 합계' AS large_category_name
                     , IFNULL(SUM(t.total), 0) AS total
                  FROM (
                        SELECT i.large_category_id
                             , SUM(i.income_amount) AS total
                          FROM income i
                         WHERE i.user_email=#{email}
                           AND i.income_date between #{startDate} and #{endDate}
                      GROUP BY i.large_category_id
                       ) t
             UNION ALL
                SELECT lc.large_category_id
                     , lc.large_category_name
                     , IFNULL(i.total,0) AS total
                  FROM (
                        SELECT lc.large_category_id
                             , lc.large_category_name
                          FROM large_category lc
                         WHERE lc.category_type = 'INC'
                       ) lc
             LEFT JOIN (
                        SELECT i.large_category_id
                             , SUM(i.income_amount) AS total
                          FROM income i
                         WHERE i.user_email=#{email}
                           AND i.income_date between #{startDate} and #{endDate}
                      GROUP BY i.large_category_id
                       ) i
                    ON lc.large_category_id = i.large_category_id
              ORDER BY FIELD(large_category_id,20), large_category_id
               ) a
     UNION ALL
        SELECT b.large_category_id
             , b.large_category_name
             , b.total
          FROM (
                SELECT 0 AS large_category_id
                     , '지출 합계' AS large_category_name
                     , IFNULL(SUM(t.total) ,0) AS total
                  FROM (
                        SELECT e.large_category_id
                             , SUM(e.card)+SUM(e.cash) AS total
                          FROM expenditure e
                         WHERE e.user_email=#{email}
                           AND e.expenditure_date between #{startDate} and #{endDate}
                      GROUP BY e.large_category_id
                       ) t
             UNION ALL
                SELECT lc.large_category_id
                     , lc.large_category_name
                     , IFNULL(e.total ,0) AS total
                  FROM (
                        SELECT lc.large_category_id
                             , lc.large_category_name
                          FROM large_category lc
                         WHERE lc.category_type = 'EXP'
                       ) lc
             LEFT JOIN (
                        SELECT e.large_category_id
                             , SUM(e.card)+SUM(e.cash) AS total
                          FROM expenditure e
                         WHERE e.user_email=#{email}
                           AND e.expenditure_date between #{startDate} and #{endDate}
                      GROUP BY e.large_category_id
                       ) e
                    ON lc.large_category_id = e.large_category_id
              ORDER BY FIELD(large_category_id,1), large_category_id
               ) b
    </select>
</mapper>