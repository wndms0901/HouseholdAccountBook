<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.mapper.WriteMapper">
    <resultMap type="com.app.dto.LargeCategoryDto" id="largeCategoryDto">
        <result column="large_category_id" property="largeCategoryId" />
        <result column="large_category_name" property="largeCategoryName" />
        <result column="category_type" property="categoryType" />
    </resultMap>
    <resultMap type="com.app.dto.SmallCategoryDto" id="smallCategoryDto">
        <result column="large_category_id" property="largeCategoryId" />
        <result column="small_category_id" property="smallCategoryId" />
        <result column="small_category_name" property="smallCategoryName" />
    </resultMap>
    <resultMap type="com.app.dto.AccountCategoryDto" id="accountCategoryDto">
        <result column="account_category_id" property="accountCategoryId" />
        <result column="account_category_name" property="accountCategoryName" />
        <result column="account_category_type" property="accountCategoryType" />
    </resultMap>
    <resultMap type="com.app.dto.ExpenditureDto" id="expenditureDto">
        <result column="expenditure_id" property="expenditureId" />
        <result column="expenditure_date" property="expenditureDate" />
        <result column="expenditure_description" property="expenditureDescription" />
        <result column="cash" property="cash" />
        <result column="card" property="card" />
        <result column="account_category_id" property="accountCategoryId" />
        <result column="account_category_name" property="accountCategoryName" />
        <result column="large_category_id" property="largeCategoryId" />
        <result column="large_category_name" property="largeCategoryName" />
        <result column="small_category_id" property="smallCategoryId" />
        <result column="small_category_name" property="smallCategoryName" />
        <result column="memo" property="memo" />
    </resultMap>
    <resultMap type="com.app.dto.IncomeDto" id="incomeDto">
        <result column="income_id" property="incomeId" />
        <result column="income_date" property="incomeDate" />
        <result column="income_description" property="incomeDescription" />
        <result column="income_amount" property="incomeAmount" />
        <result column="account_category_id" property="accountCategoryId" />
        <result column="account_category_name" property="accountCategoryName" />
        <result column="large_category_id" property="largeCategoryId" />
        <result column="large_category_name" property="largeCategoryName" />
        <result column="memo" property="memo" />
    </resultMap>

    <select id="selectLargeCategoryList" parameterType="String" resultMap="largeCategoryDto">
        SELECT lc.large_category_id
             , lc.large_category_name
          FROM large_category lc
         WHERE lc.category_type=#{categoryType}
    </select>
    <select id="selectSmallCategoryList" parameterType="String" resultMap="smallCategoryDto">
        SELECT sc.large_category_id
             , sc.small_category_id
             , sc.small_category_name
          FROM large_category lc
    INNER JOIN small_category sc
            ON lc.large_category_id =sc.large_category_id
         WHERE lc.category_type=#{categoryType}
    </select>
    <select id="selectAccountCategoryList" parameterType="String" resultMap="accountCategoryDto">
        SELECT ac.account_category_id
             , ac.account_category_name
          FROM account_category ac
         WHERE ac.account_category_type=#{accountCategoryType}
    </select>
    <select id="selectExpenditureList" parameterType="com.app.dto.WriteRequestDto" resultMap="expenditureDto">
        SELECT e.expenditure_id
             , e.expenditure_date
             , e.expenditure_description
             , e.cash
             , e.card
             , e.account_category_id
             , ac.account_category_name
             , e.large_category_id
             , lc.large_category_name
             , e.small_category_id
             , s.small_category_name
             , e.memo
          FROM expenditure e
    INNER JOIN account_category ac
            ON e.account_category_id = ac.account_category_id
    INNER JOIN large_category lc
            ON e.large_category_id = lc.large_category_id
    INNER JOIN small_category s
            ON e.small_category_id = s.small_category_id
         WHERE e.expenditure_date BETWEEN #{startDate} AND #{endDate}
           AND e.user_email=#{userDto.email}
      ORDER BY e.expenditure_date
    </select>
    <select id="selectCalculationList" parameterType="com.app.dto.WriteRequestDto" resultMap="incomeDto">
        SELECT #{incomeDate} AS income_date
             , CASE WHEN IFNULL(i.account_category_id, e.account_category_id) = 6
                    THEN CONCAT(#{lastMonth}, '월 전월이월 잔액')
                    ELSE CONCAT('지갑속현금 ', #{lastMonth}, '월 전월이월 잔액')
                END AS income_description
             , IFNULL(i.income_amount,0) - IFNULL(e.cash,0) AS income_amount
             , IFNULL(i.account_category_id, e.account_category_id) AS account_category_id
             , 25 AS large_category_id
          FROM (
                SELECT i.account_category_id
                     , SUM(i.income_amount) AS income_amount
                  FROM income i
                 WHERE i.income_date BETWEEN #{startDate} AND #{endDate}
                   AND i.user_email=#{userDto.email}
                   AND i.account_category_id in (6,7)
              GROUP BY i.account_category_id
               ) i
     LEFT JOIN (
                SELECT CASE WHEN e.account_category_id = 1
                            THEN 6
                            ELSE 7
                        END AS account_category_id
                     , SUM(e.cash) as cash
                  FROM expenditure e
                 WHERE e.expenditure_date BETWEEN #{startDate} AND #{endDate}
                   AND e.user_email=#{userDto.email}
                   AND e.account_category_id in (1,2)
              GROUP BY e.account_category_id
               ) e
            ON i.account_category_id =e.account_category_id
         UNION
        SELECT #{incomeDate} AS income_date
             , CASE WHEN IFNULL(i.account_category_id, e.account_category_id) = 6
                    THEN CONCAT(#{lastMonth}, '월 전월이월 잔액')
                    ELSE CONCAT('지갑속현금 ', #{lastMonth}, '월 전월이월 잔액')
                END AS income_description
             , IFNULL(i.income_amount,0) - IFNULL(e.cash,0) AS income_amount
             , IFNULL(i.account_category_id, e.account_category_id) AS account_category_id
             , 25 AS large_category_id
          FROM (
                SELECT i.account_category_id
                     , SUM(i.income_amount) AS income_amount
                  FROM income i
                 WHERE i.income_date BETWEEN #{startDate} AND #{endDate}
                   AND i.user_email=#{userDto.email}
                   AND i.account_category_id in (6,7)
              GROUP BY i.account_category_id
               ) i
    RIGHT JOIN (
                SELECT CASE WHEN e.account_category_id = 1
                            THEN 6
                            ELSE 7
                        END AS account_category_id
                     , SUM(e.cash) as cash
                  FROM expenditure e
                 WHERE e.expenditure_date BETWEEN #{startDate} AND #{endDate}
                   AND e.user_email=#{userDto.email}
                   AND e.account_category_id in (1,2)
              GROUP BY e.account_category_id
               ) e
            ON i.account_category_id = e.account_category_id
    </select>
    <select id="selectIncomeList" parameterType="com.app.dto.WriteRequestDto" resultMap="incomeDto">
        SELECT i.income_id
             , i.income_date
             , i.income_description
             , i.income_amount
             , i.account_category_id
             , ac.account_category_name
             , i.large_category_id
             , lc.large_category_name
             , i.memo
          FROM income i
    INNER JOIN account_category ac
            ON i.account_category_id = ac.account_category_id
    INNER JOIN large_category lc
            ON i.large_category_id = lc.large_category_id
         WHERE i.income_date BETWEEN #{startDate} AND #{endDate}
           AND i.user_email=#{userDto.email}
      ORDER BY i.income_date
    </select>
</mapper>